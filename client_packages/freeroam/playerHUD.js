// playerHUD.js
let playerData = {
    inventory: 0,
    count: 0,
    balance: 0 // –ö–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ HUD
};

exports.initHUD = () => {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    mp.events.add('updateUI', (inventory, count) => {
        playerData.inventory = inventory;
        playerData.count = count;
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    mp.events.add('updateBalance', (balance) => {
        playerData.balance = balance;
        mp.gui.chat.push(`üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω: ${balance.toLocaleString()} ‚ÇΩ`);
    });

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ GTA –±–∞–ª–∞–Ω—Å–∞
    mp.events.add('setNativeBalance', (balance) => {
        try {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å GTA
            mp.game.player.setMoney(balance);

            // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–ª–∞–Ω—Å
            playerData.balance = balance;

            console.log(`[CLIENT] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${balance}`);
            mp.gui.chat.push(`üéÆ –ù–∞—Ç–∏–≤–Ω—ã–π GTA –±–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${balance.toLocaleString()} ‚ÇΩ`);
        } catch (error) {
            console.error(`[CLIENT] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞: ${error}`);
        }
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
    mp.events.add('getNativeBalance', () => {
        try {
            const nativeBalance = mp.game.player.getMoney();
            console.log(`[CLIENT] –¢–µ–∫—É—â–∏–π –Ω–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${nativeBalance}`);
            return nativeBalance;
        } catch (error) {
            console.error(`[CLIENT] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞: ${error}`);
            return 0;
        }
    });

    // –†–µ–Ω–¥–µ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    mp.events.add('render', () => {
        const player = mp.players.local;
        const speed = Math.round(player.getSpeed() * 3.6);
        const pos = player.position;

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –Ω–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        let nativeBalance = 0;
        try {
            nativeBalance = mp.game.player.getMoney();
        } catch (error) {
            nativeBalance = playerData.balance; // –§–æ–ª–ª–±—ç–∫ –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–ª–∞–Ω—Å
        }

        // –°–∫–æ—Ä–æ—Å—Ç—å, –º—è—á–∏ –∏ –±–∞–ª–∞–Ω—Å (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å)
        mp.game.graphics.drawText(
            `–°–∫–æ—Ä–æ—Å—Ç—å: ${speed} –∫–º/—á | –ú—è—á–∏: ${playerData.count} | –ë–∞–ª–∞–Ω—Å: ${nativeBalance.toLocaleString()} ‚ÇΩ`,
            [0.5, 0.03],
            {
                font: 4,
                color: [255, 255, 255, 220],
                scale: [0.5, 0.5],
                outline: true,
                centre: true
            }
        );

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        mp.game.graphics.drawText(
            `–ù–∞—Ç–∏–≤–Ω—ã–π: ${nativeBalance.toLocaleString()} ‚ÇΩ | –ö–∞—Å—Ç–æ–º–Ω—ã–π: ${playerData.balance.toLocaleString()} ‚ÇΩ`,
            [0.5, 0.06],
            {
                font: 4,
                color: [200, 200, 200, 150],
                scale: [0.3, 0.3],
                outline: true,
                centre: true
            }
        );

        // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        mp.game.graphics.drawText(
            `X: ${pos.x.toFixed(1)} Y: ${pos.y.toFixed(1)} Z: ${pos.z.toFixed(1)}`,
            [0.5, 0.095],
            {
                font: 4,
                color: [200, 200, 200, 180],
                scale: [0.4, 0.4],
                outline: true,
                centre: true
            }
        );

        // –ë–ª–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const controlsConfig = {
            startY: 0.4,
            yStep: 0.045,
            colors: {
                header: [100, 200, 255, 220],
                text: [220, 220, 220, 200]
            }
        };

        const controls = [
            {text: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", offsetX: 0.03},
            {text: "[M] - –¢–µ–ª–µ—Ñ–æ–Ω", offsetX: 0.03},
            {text: "[X] - –û—Å—Ç–∞–≤–∏—Ç—å –∫–ª–∞–¥", offsetX: 0.04},
            {text: "[P] - –î—É–Ω—É—Ç—å", offsetX: 0.025},
            {text: "[B] - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å", offsetX: 0.045}, // –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
            {text: "[BACKSPACE] - –ó–∞–∫—Ä—ã—Ç—å —Å–º–∞—Ä—Ç—Ñ–æ–Ω", offsetX: 0.065}
        ];

        controls.forEach((item, index) => {
            const yPos = controlsConfig.startY + (index * controlsConfig.yStep);
            const style = {
                font: 4,
                color: index < 1 ? controlsConfig.colors.header : controlsConfig.colors.text,
                scale: [0.45, 0.45],
                outline: true
            };

            mp.game.graphics.drawText(item.text, [item.offsetX, yPos], style);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ B –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞
    mp.keys.bind(0x42, true, () => { // B key
        try {
            const nativeBalance = mp.game.player.getMoney();
            mp.gui.chat.push(`üéÆ –ù–∞—Ç–∏–≤–Ω—ã–π GTA –±–∞–ª–∞–Ω—Å: ${nativeBalance.toLocaleString()} ‚ÇΩ`);
            mp.gui.chat.push(`üí∞ –ö–∞—Å—Ç–æ–º–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${playerData.balance.toLocaleString()} ‚ÇΩ`);
        } catch (error) {
            mp.gui.chat.push(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞: ${error}`);
        }
    });
}