
// freeroam/ballSystem.js
let playerData = {
    inventory: 0,
    count: 0
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –æ–ø—å—è–Ω–µ–Ω–∏—è
function enableDrunkVisuals(duration = 30000) {
    const visualModifier = "spectator5";
    mp.game.graphics.setTimecycleModifier(visualModifier);
    mp.game.graphics.setTimecycleModifierStrength(0.8);
    mp.game.cam.shakeGameplayCam("DRUNK_SHAKE", 1.0);

    setTimeout(() => {
        mp.game.graphics.clearTimecycleModifier();
        mp.game.cam.stopGameplayCamShaking(true);
    }, duration);
}

exports.initBallSystem = () => {
    console.log('[CLIENT] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –º—è—á–µ–π...');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
    mp.keys.bind(0x58, true, () => {
        console.log('[CLIENT] –ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ X - —Å–æ–∑–¥–∞–Ω–∏–µ –º—è—á–∞');
        mp.events.callRemote('spawnObjectNearby', true);
    }); // X

    mp.keys.bind(0x50, true, () => {
        console.log('[CLIENT] –ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞ P - –ø–æ–µ–¥–∞–Ω–∏–µ –º—è—á–∞');
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º—è—á–µ–π –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        if (playerData.inventory > 0) {
            mp.events.callRemote('eatBall');
        } else {
            mp.gui.chat.push('–£ –≤–∞—Å –Ω–µ—Ç –º—è—á–µ–π –¥–ª—è —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è!');
        }
    }); // P

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ø–∞–≤–Ω–∞ –≤ –∫–∞—Å—Ç–æ–º–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
    mp.events.add('spawnBallAtCustomPosition', (x, y, z) => {
        console.log(`[CLIENT] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ø–∞–≤–Ω –º—è—á–∞ –≤ –ø–æ–∑–∏—Ü–∏–∏: ${x}, ${y}, ${z}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–∞–ª–∏–¥–Ω—ã
        if (typeof x !== 'number' || typeof y !== 'number' || typeof z !== 'number') {
            console.error('[CLIENT] –ù–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Å–ø–∞–≤–Ω–∞ –º—è—á–∞:', { x, y, z });
            return;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        mp.events.callRemote('spawnBallAtPosition', x, y, z);
        mp.gui.chat.push(`–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –º—è—á–∞ –≤: ${x.toFixed(1)}, ${y.toFixed(1)}, ${z.toFixed(1)}`);
    });

    // –ù–û–í–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –∏–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    mp.events.add('webPurchaseCompleted', (productData) => {
        console.log('[CLIENT] –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –∏–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', productData);

        try {
            // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞, –µ—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞
            let product = productData;
            if (typeof productData === 'string') {
                product = JSON.parse(productData);
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞
            mp.events.callRemote('processPurchase', product);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
            mp.gui.chat.push(`üõí –ó–∞–∫–∞–∑ "${product.name}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É...`);

        } catch (error) {
            console.error('[CLIENT] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–∫—É–ø–∫–∏:', error);
            mp.gui.chat.push('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞!');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
    mp.events.add('chatPush', (message) => {
        mp.gui.chat.push(message);
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    mp.events.add('updateInventory', (inventory, count) => {
        console.log(`[CLIENT] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è: –º—è—á–µ–π=${inventory}, —Å–æ–±—Ä–∞–Ω–æ=${count}`);
        playerData.inventory = inventory;
        playerData.count = count;
        mp.gui.chat.push(`–ú—è—á–µ–π: ${inventory} | –°–æ–±—Ä–∞–Ω–æ: ${count}`);
        mp.players.local.setVariable('inventory', inventory);
    });

    // –°–±–æ—Ä –º—è—á–∞
    mp.events.add('clientCollectBall', async (ballId) => {
        console.log(`[CLIENT] –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å–±–æ—Ä–∞ –º—è—á–∞ ID: ${ballId}`);
        const ball = mp.objects.at(ballId);
        if (!ball) {
            console.error(`[CLIENT] –ú—è—á —Å ID ${ballId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return;
        }

        const animDict = 'pickup_object';
        mp.game.streaming.requestAnimDict(animDict);

        while (!mp.game.streaming.hasAnimDictLoaded(animDict)) {
            await mp.game.waitAsync(100);
        }

        mp.players.local.taskPlayAnim(
            animDict,
            'putdown_low',
            8.0,
            -8.0,
            1000,
            1,
            0,
            false,
            false,
            false
        );

        mp.game.graphics.startParticleFxNonLoopedOnEntity(
            'scr_pickup_health',
            ball.handle,
            0, 0, 0,
            0, 0, 0,
            1.0,
            false, false, false
        );
    });

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–µ–¥–∞–Ω–∏—è
    mp.events.add('playEatAnimation', async () => {
        console.log('[CLIENT] –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–µ–¥–∞–Ω–∏—è –º—è—á–∞');
        const animDict = 'mp_suicide';
        mp.game.streaming.requestAnimDict(animDict);

        while (!mp.game.streaming.hasAnimDictLoaded(animDict)) {
            await mp.game.waitAsync(100);
        }

        mp.players.local.taskPlayAnim(
            animDict,
            'pill',
            8.0,
            -8.0,
            2500,
            1,
            0,
            false,
            false,
            false
        );

        mp.game.graphics.startParticleFxNonLoopedOnEntity(
            'scr_fbi_falling_debris',
            mp.players.local.handle,
            0, 0, 0,
            0, 0, 0,
            1.0,
            false, false, false
        );
        enableDrunkVisuals(120000);
    });

    console.log('[CLIENT] –°–∏—Å—Ç–µ–º–∞ –º—è—á–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
};